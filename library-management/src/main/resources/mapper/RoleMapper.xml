<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.management.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.book.management.model.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.book.management.model.Role" >
    insert into t_role (id, role_name, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.book.management.model.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.management.model.Role" >
    update t_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.management.model.Role" >
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 分页条件查询角色集合 -->
  <select id="getRolesList" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from t_role
    <where>
      <if test="roleName != null and roleName != ''">
        role_name like concat('%',#{roleName},'%')
      </if>
    </where>
      <if test="start!=null and size!=null">
        limit #{start}, #{size}
      </if>
  </select>

  <!-- 查询角色总条数 -->
  <select id="getTotalRole" resultType="java.lang.Integer" parameterType="java.util.Map">
    select count(*) from t_role
    <where>
      <if test="roleName != null and roleName != ''">
        role_name like #{roleName}
      </if>
    </where>
  </select>

  <!-- 根据用户id查询用户名 -->
  <select id="findByUserId" resultMap="BaseResultMap" parameterType="Long">
    select r.role_name
        from t_user u,t_role r ,t_role_user ur
        where ur.user_id = u.id
        and ur.role_id = r.id
        and u.id =#{userId}
  </select>

  <!-- 删除用户角色信息 -->
  <delete id="deleteRoleUserByUserId" parameterType="Long">
      delete
        from t_role_user
        where user_id = #{userId}
  </delete>

  <!-- 校验角色名称是否存在 -->
  <select id="countByRoleName" parameterType="map" resultType="java.lang.Integer">
    select count(1) from t_role
    where role_name = #{roleName}
    <if test="id != null">
      AND id != #{id}
    </if>
  </select>

  <!-- 保存角色权限信息 -->
  <insert id="insertRolePermissions" parameterType="map">
    insert into t_role_permission (role_id,permission_id) values
    <foreach collection="permissionIds" item="permissionId" separator=",">
      (#{roleId},#{permissionId})
    </foreach>
  </insert>
</mapper>